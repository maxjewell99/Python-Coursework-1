from graphics import *

#---------------------------Shape Creation------------------------------#

def brPoint(tlPoint, width, height):
    x = tlPoint.getX() + width
    y = tlPoint.getY() + height
    brPoint = Point(x, y)
    return brPoint

def centrePoint(tlPoint, radius):
    x = tlPoint.getX() + radius
    y = tlPoint.getY() + radius
    centre = Point(x, y)
    return centre

def rectangle(win, tlPoint, brPoint, colour):
    r = Rectangle(tlPoint, brPoint)
    r.setFill(colour)
    r.draw(win)
    return r

def circlefromTL(win, tlPoint, radius, colour, outline):
    centre = centrePoint(tlPoint, radius)
    circle(win, centre, radius, colour, outline)

def circle(win, centre, radius, colour, outline):
    c = Circle(centre, radius)
    c.setFill(colour)
    c.setOutline(outline)
    c.draw(win)
    return c

def triangle(win, p1, p2, p3, colour, outline):
    t = Polygon(p1, p2, p3)
    t.setFill(colour)
    t.setOutline(outline)
    t.draw(win)
    return t

#-------------------------End of Shape Creation-------------------------#


#--------------------------Patchwork Designs----------------------------#

def patchF(win, colour, tlPoint):
    dimension = 100
    centre = centrePoint(tlPoint, 50)
    scale = 12
    r = rectangle(win, tlPoint, brPoint(tlPoint, dimension, dimension), colour)
    t = Text(centre,"Final")
    t.setSize(scale)
    t.setTextColor("black")
    t.draw(win)

def patchB(win, colour, tlPoint):
    dimension = 100
    centre = centrePoint(tlPoint, 50)
    scale = 30
    r = rectangle(win,tlPoint,brPoint(tlPoint,dimension,dimension),colour)

def patch7(win, colour, tlOffset):
    patchSize = 100
    scale = 20
    for y in range(0, patchSize, scale):
        for x in range(0, patchSize, scale):
            tl = Point(tlOffset.getX() + x, tlOffset.getY() + y)
            if y == 0 or y == 40 or y == 80:
                circlefromTL(win, tl, 10, colour, colour)
            else:
                circlefromTL(win, tl, 10, "white", colour)
        
#------------------------End of Patchwork Designs-----------------------#


#-------------------------User Interface Section------------------------#

def screenInput():
    inputScreen = True
    while inputScreen:
        inputSize = int(input("Enter the size of the screen (5/7): "))
        if(inputSize == 5 or inputSize == 7):
            inputSize *= 100
            break
    return inputSize

def colourInput(colours):
    while True:
        userColour = str(input("Enter a colour: "))

        for i in range(len(colours)):
            if userColour == colours[i]:
                return userColour
            else:
                pass


#----------------------End of User Interface Section--------------------#

def main():
    screenSize = screenInput()
    colours = ["blue", "orange", "red", "green", "purple", "cyan"]
    userColour1 = colourInput(colours)
    userColour2 = colourInput(colours)
    userColour3 = colourInput(colours)
    print(userColour1, userColour2, userColour3)

    
    dimension = 100
    win = GraphWin("Test", screenSize, screenSize)
    

    midPoint = screenSize // 2
    for row in range(0, screenSize, 100):
        for column in range(0, screenSize, 100):
            tlPoint = Point(row, column)
            if(column == midPoint - 150 and row < midPoint - 150 or column == midPoint - 250 and row < midPoint - 250):
                colour = userColour2 # Orange Left Top
                patch7(win, colour, tlPoint)
            elif(column == midPoint - 150 and row >= midPoint + 150 or column == midPoint - 250 and row >= midPoint + 250):
                colour = userColour3 # Red Right Top
                patch7(win, colour, tlPoint)
            elif(column == midPoint - 50 and row < midPoint - 50):
                colour = userColour2 # Orange P Middle
                patch7(win, colour, tlPoint)
            elif(column == midPoint - 50 and row > midPoint - 50):
                colour = userColour3 # Red P Middle
                patch7(win, colour, tlPoint)
            elif(column == screenSize - (midPoint - 50) and row < midPoint - 150 or column == midPoint + 150 and row < midPoint - 250):
                colour = userColour2 # Orange Blank Bottom
                patchB(win, colour, tlPoint)
            elif(column == screenSize - (midPoint - 50) and row > midPoint + 50 or column == screenSize - 200 and row == screenSize - 100):
                colour = userColour3 # Red Blank Bottom
                patchB(win, colour, tlPoint)
            elif(column < midPoint - 50):
                colour = userColour1 # Blue Blank Top
                patchB(win, colour, tlPoint)
            else:
                colour = userColour1
                patchF(win, colour, tlPoint)

                # To make more efficient, use nested statements to determine colours
                # Can be done in 6 statements

    win.getMouse()
main()
